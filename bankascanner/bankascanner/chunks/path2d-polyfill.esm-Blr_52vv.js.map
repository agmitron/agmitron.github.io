{"version":3,"file":"path2d-polyfill.esm-Blr_52vv.js","sources":["../../../../node_modules/path2d-polyfill/dist/path2d-polyfill.esm.js"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\n\nvar ARG_LENGTH = {\n    a: 7,\n    c: 6,\n    h: 1,\n    l: 2,\n    m: 2,\n    q: 4,\n    s: 4,\n    t: 2,\n    v: 1,\n    z: 0\n};\nvar SEGMENT_PATTERN = /([astvzqmhlc])([^astvzqmhlc]*)/gi;\nvar NUMBER = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/gi;\nfunction parseValues(args) {\n    var numbers = args.match(NUMBER);\n    return numbers ? numbers.map(Number) : [];\n}\n/**\n * parse an svg path data string. Generates an Array\n * of commands where each command is an Array of the\n * form `[command, arg1, arg2, ...]`\n *\n * https://www.w3.org/TR/SVG/paths.html#PathDataGeneralInformation\n * @ignore\n *\n * @param {string} path\n * @returns {array}\n */\nfunction parsePath(path) {\n    var data = [];\n    var p = String(path).trim();\n    // A path data segment (if there is one) must begin with a \"moveto\" command\n    if (p[0] !== \"M\" && p[0] !== \"m\") {\n        return data;\n    }\n    p.replace(SEGMENT_PATTERN, function (_, command, args) {\n        var theArgs = parseValues(args);\n        var type = command.toLowerCase();\n        var theCommand = command;\n        // overloaded moveTo\n        if (type === \"m\" && theArgs.length > 2) {\n            data.push(__spreadArray([theCommand], theArgs.splice(0, 2), true));\n            type = \"l\";\n            theCommand = theCommand === \"m\" ? \"l\" : \"L\";\n        }\n        // Ignore invalid commands\n        if (theArgs.length < ARG_LENGTH[type]) {\n            return \"\";\n        }\n        data.push(__spreadArray([theCommand], theArgs.splice(0, ARG_LENGTH[type]), true));\n        // The command letter can be eliminated on subsequent commands if the\n        // same command is used multiple times in a row (e.g., you can drop the\n        // second \"L\" in \"M 100 200 L 200 100 L -100 -200\" and use\n        // \"M 100 200 L 200 100 -100 -200\" instead).\n        while (theArgs.length >= ARG_LENGTH[type] && theArgs.length && ARG_LENGTH[type]) {\n            data.push(__spreadArray([theCommand], theArgs.splice(0, ARG_LENGTH[type]), true));\n        }\n        return \"\";\n    });\n    return data;\n}\n\nfunction rotatePoint(point, angle) {\n    var nx = point.x * Math.cos(angle) - point.y * Math.sin(angle);\n    var ny = point.y * Math.cos(angle) + point.x * Math.sin(angle);\n    point.x = nx;\n    point.y = ny;\n}\nfunction translatePoint(point, dx, dy) {\n    point.x += dx;\n    point.y += dy;\n}\nfunction scalePoint(point, s) {\n    point.x *= s;\n    point.y *= s;\n}\n/**\n * Implements a browser's Path2D api\n */\nvar Path2D = /** @class */ (function () {\n    function Path2D(path) {\n        var _a;\n        this.commands = [];\n        if (path && path instanceof Path2D) {\n            (_a = this.commands).push.apply(_a, path.commands);\n        }\n        else if (path) {\n            this.commands = parsePath(path);\n        }\n    }\n    Path2D.prototype.addPath = function (path) {\n        var _a;\n        if (path && path instanceof Path2D) {\n            (_a = this.commands).push.apply(_a, path.commands);\n        }\n    };\n    Path2D.prototype.moveTo = function (x, y) {\n        this.commands.push([\"M\", x, y]);\n    };\n    Path2D.prototype.lineTo = function (x, y) {\n        this.commands.push([\"L\", x, y]);\n    };\n    Path2D.prototype.arc = function (x, y, r, start, end, ccw) {\n        this.commands.push([\"AC\", x, y, r, start, end, !!ccw]);\n    };\n    Path2D.prototype.arcTo = function (x1, y1, x2, y2, r) {\n        this.commands.push([\"AT\", x1, y1, x2, y2, r]);\n    };\n    Path2D.prototype.ellipse = function (x, y, rx, ry, angle, start, end, ccw) {\n        this.commands.push([\"E\", x, y, rx, ry, angle, start, end, !!ccw]);\n    };\n    Path2D.prototype.closePath = function () {\n        this.commands.push([\"Z\"]);\n    };\n    Path2D.prototype.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.commands.push([\"C\", cp1x, cp1y, cp2x, cp2y, x, y]);\n    };\n    Path2D.prototype.quadraticCurveTo = function (cpx, cpy, x, y) {\n        this.commands.push([\"Q\", cpx, cpy, x, y]);\n    };\n    Path2D.prototype.rect = function (x, y, width, height) {\n        this.commands.push([\"R\", x, y, width, height]);\n    };\n    Path2D.prototype.roundRect = function (x, y, width, height, radii) {\n        if (typeof radii === \"undefined\") {\n            this.commands.push([\"RR\", x, y, width, height, 0]);\n        }\n        else {\n            this.commands.push([\"RR\", x, y, width, height, radii]);\n        }\n    };\n    return Path2D;\n}());\nfunction buildPath(ctx, commands) {\n    var x = 0;\n    var y = 0;\n    var endAngle;\n    var startAngle;\n    var largeArcFlag;\n    var sweepFlag;\n    var endPoint;\n    var midPoint;\n    var angle;\n    var lambda;\n    var t1;\n    var t2;\n    var x1;\n    var y1;\n    var r;\n    var rx;\n    var ry;\n    var w;\n    var h;\n    var pathType;\n    var centerPoint;\n    var ccw;\n    var radii;\n    var cpx = null;\n    var cpy = null;\n    var qcpx = null;\n    var qcpy = null;\n    var startPoint = null;\n    var currentPoint = null;\n    ctx.beginPath();\n    for (var i = 0; i < commands.length; ++i) {\n        pathType = commands[i][0];\n        // Reset control point if command is not cubic\n        if (pathType !== \"S\" && pathType !== \"s\" && pathType !== \"C\" && pathType !== \"c\") {\n            cpx = null;\n            cpy = null;\n        }\n        if (pathType !== \"T\" && pathType !== \"t\" && pathType !== \"Q\" && pathType !== \"q\") {\n            qcpx = null;\n            qcpy = null;\n        }\n        var c = void 0;\n        switch (pathType) {\n            case \"m\":\n            case \"M\":\n                c = commands[i];\n                if (pathType === \"m\") {\n                    x += c[1];\n                    y += c[2];\n                }\n                else {\n                    x = c[1];\n                    y = c[2];\n                }\n                if (pathType === \"M\" || !startPoint) {\n                    startPoint = { x: x, y: y };\n                }\n                ctx.moveTo(x, y);\n                break;\n            case \"l\":\n                c = commands[i];\n                x += c[1];\n                y += c[2];\n                ctx.lineTo(x, y);\n                break;\n            case \"L\":\n                c = commands[i];\n                x = c[1];\n                y = c[2];\n                ctx.lineTo(x, y);\n                break;\n            case \"H\":\n                c = commands[i];\n                x = c[1];\n                ctx.lineTo(x, y);\n                break;\n            case \"h\":\n                c = commands[i];\n                x += c[1];\n                ctx.lineTo(x, y);\n                break;\n            case \"V\":\n                c = commands[i];\n                y = c[1];\n                ctx.lineTo(x, y);\n                break;\n            case \"v\":\n                c = commands[i];\n                y += c[1];\n                ctx.lineTo(x, y);\n                break;\n            case \"a\":\n            case \"A\":\n                c = commands[i];\n                if (currentPoint === null) {\n                    throw new Error(\"This should never happen\");\n                }\n                if (pathType === \"a\") {\n                    x += c[6];\n                    y += c[7];\n                }\n                else {\n                    x = c[6];\n                    y = c[7];\n                }\n                rx = c[1]; // rx\n                ry = c[2]; // ry\n                angle = (c[3] * Math.PI) / 180;\n                largeArcFlag = !!c[4];\n                sweepFlag = !!c[5];\n                endPoint = { x: x, y: y };\n                // https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n                midPoint = {\n                    x: (currentPoint.x - endPoint.x) / 2,\n                    y: (currentPoint.y - endPoint.y) / 2\n                };\n                rotatePoint(midPoint, -angle);\n                // radius correction\n                lambda = (midPoint.x * midPoint.x) / (rx * rx) + (midPoint.y * midPoint.y) / (ry * ry);\n                if (lambda > 1) {\n                    lambda = Math.sqrt(lambda);\n                    rx *= lambda;\n                    ry *= lambda;\n                }\n                centerPoint = {\n                    x: (rx * midPoint.y) / ry,\n                    y: -(ry * midPoint.x) / rx\n                };\n                t1 = rx * rx * ry * ry;\n                t2 = rx * rx * midPoint.y * midPoint.y + ry * ry * midPoint.x * midPoint.x;\n                if (sweepFlag !== largeArcFlag) {\n                    scalePoint(centerPoint, Math.sqrt((t1 - t2) / t2) || 0);\n                }\n                else {\n                    scalePoint(centerPoint, -Math.sqrt((t1 - t2) / t2) || 0);\n                }\n                startAngle = Math.atan2((midPoint.y - centerPoint.y) / ry, (midPoint.x - centerPoint.x) / rx);\n                endAngle = Math.atan2(-(midPoint.y + centerPoint.y) / ry, -(midPoint.x + centerPoint.x) / rx);\n                rotatePoint(centerPoint, angle);\n                translatePoint(centerPoint, (endPoint.x + currentPoint.x) / 2, (endPoint.y + currentPoint.y) / 2);\n                ctx.save();\n                ctx.translate(centerPoint.x, centerPoint.y);\n                ctx.rotate(angle);\n                ctx.scale(rx, ry);\n                ctx.arc(0, 0, 1, startAngle, endAngle, !sweepFlag);\n                ctx.restore();\n                break;\n            case \"C\":\n                c = commands[i];\n                cpx = c[3]; // Last control point\n                cpy = c[4];\n                x = c[5];\n                y = c[6];\n                ctx.bezierCurveTo(c[1], c[2], cpx, cpy, x, y);\n                break;\n            case \"c\":\n                c = commands[i];\n                ctx.bezierCurveTo(c[1] + x, c[2] + y, c[3] + x, c[4] + y, c[5] + x, c[6] + y);\n                cpx = c[3] + x; // Last control point\n                cpy = c[4] + y;\n                x += c[5];\n                y += c[6];\n                break;\n            case \"S\":\n                c = commands[i];\n                if (cpx === null || cpy === null) {\n                    cpx = x;\n                    cpy = y;\n                }\n                ctx.bezierCurveTo(2 * x - cpx, 2 * y - cpy, c[1], c[2], c[3], c[4]);\n                cpx = c[1]; // last control point\n                cpy = c[2];\n                x = c[3];\n                y = c[4];\n                break;\n            case \"s\":\n                c = commands[i];\n                if (cpx === null || cpy === null) {\n                    cpx = x;\n                    cpy = y;\n                }\n                ctx.bezierCurveTo(2 * x - cpx, 2 * y - cpy, c[1] + x, c[2] + y, c[3] + x, c[4] + y);\n                cpx = c[1] + x; // last control point\n                cpy = c[2] + y;\n                x += c[3];\n                y += c[4];\n                break;\n            case \"Q\":\n                c = commands[i];\n                qcpx = c[1]; // last control point\n                qcpy = c[2];\n                x = c[3];\n                y = c[4];\n                ctx.quadraticCurveTo(qcpx, qcpy, x, y);\n                break;\n            case \"q\":\n                c = commands[i];\n                qcpx = c[1] + x; // last control point\n                qcpy = c[2] + y;\n                x += c[3];\n                y += c[4];\n                ctx.quadraticCurveTo(qcpx, qcpy, x, y);\n                break;\n            case \"T\":\n                c = commands[i];\n                if (qcpx === null || qcpy === null) {\n                    qcpx = x;\n                    qcpy = y;\n                }\n                qcpx = 2 * x - qcpx; // last control point\n                qcpy = 2 * y - qcpy;\n                x = c[1];\n                y = c[2];\n                ctx.quadraticCurveTo(qcpx, qcpy, x, y);\n                break;\n            case \"t\":\n                c = commands[i];\n                if (qcpx === null || qcpy === null) {\n                    qcpx = x;\n                    qcpy = y;\n                }\n                qcpx = 2 * x - qcpx; // last control point\n                qcpy = 2 * y - qcpy;\n                x += c[1];\n                y += c[2];\n                ctx.quadraticCurveTo(qcpx, qcpy, x, y);\n                break;\n            case \"z\":\n            case \"Z\":\n                if (startPoint) {\n                    x = startPoint.x;\n                    y = startPoint.y;\n                }\n                startPoint = null;\n                ctx.closePath();\n                break;\n            case \"AC\": // arc\n                c = commands[i];\n                x = c[1];\n                y = c[2];\n                r = c[3];\n                startAngle = c[4];\n                endAngle = c[5];\n                ccw = c[6];\n                ctx.arc(x, y, r, startAngle, endAngle, ccw);\n                break;\n            case \"AT\": // arcTo\n                c = commands[i];\n                x1 = c[1];\n                y1 = c[2];\n                x = c[3];\n                y = c[4];\n                r = c[5];\n                ctx.arcTo(x1, y1, x, y, r);\n                break;\n            case \"E\": // ellipse\n                c = commands[i];\n                x = c[1];\n                y = c[2];\n                rx = c[3];\n                ry = c[4];\n                angle = c[5];\n                startAngle = c[6];\n                endAngle = c[7];\n                ccw = c[8];\n                ctx.save();\n                ctx.translate(x, y);\n                ctx.rotate(angle);\n                ctx.scale(rx, ry);\n                ctx.arc(0, 0, 1, startAngle, endAngle, ccw);\n                ctx.restore();\n                break;\n            case \"R\": // rect\n                c = commands[i];\n                x = c[1];\n                y = c[2];\n                w = c[3];\n                h = c[4];\n                startPoint = { x: x, y: y };\n                ctx.rect(x, y, w, h);\n                break;\n            case \"RR\": // roundedRect\n                c = commands[i];\n                x = c[1];\n                y = c[2];\n                w = c[3];\n                h = c[4];\n                radii = c[5];\n                startPoint = { x: x, y: y };\n                ctx.roundRect(x, y, w, h, radii);\n                break;\n        }\n        if (!currentPoint) {\n            currentPoint = { x: x, y: y };\n        }\n        else {\n            currentPoint.x = x;\n            currentPoint.y = y;\n        }\n    }\n}\n/**\n * Polyfills CanvasRenderingContext2D stroke, fill and isPointInPath so that they support Path2D objects.\n * @param {WindowLike} window - window like object containing a CanvasRenderingContext2D constructor\n */\nfunction polyfillPath2D(window) {\n    if (!window || !window.CanvasRenderingContext2D || window.Path2D)\n        return;\n    var CanvasRenderingContext2D = window.CanvasRenderingContext2D;\n    /* eslint-disable @typescript-eslint/unbound-method */\n    // setting unbound functions here. Make sure this is set in function call later\n    var cFill = CanvasRenderingContext2D.prototype.fill;\n    var cStroke = CanvasRenderingContext2D.prototype.stroke;\n    var cIsPointInPath = CanvasRenderingContext2D.prototype.isPointInPath;\n    /* eslint-enable @typescript-eslint/unbound-method */\n    CanvasRenderingContext2D.prototype.fill = function fill() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (args[0] instanceof Path2D) {\n            var path = args[0];\n            var fillRule = args[1] || \"nonzero\";\n            buildPath(this, path.commands);\n            cFill.apply(this, [fillRule]);\n        }\n        else {\n            var fillRule = args[0] || \"nonzero\";\n            return cFill.apply(this, [fillRule]);\n        }\n    };\n    CanvasRenderingContext2D.prototype.stroke = function stroke(path) {\n        if (path) {\n            buildPath(this, path.commands);\n        }\n        cStroke.apply(this);\n    };\n    CanvasRenderingContext2D.prototype.isPointInPath = function isPointInPath() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (args[0] instanceof Path2D) {\n            // first argument is a Path2D object\n            var path = args[0];\n            var x = args[1];\n            var y = args[2];\n            var fillRule = args[3] || \"nonzero\";\n            buildPath(this, path.commands);\n            return cIsPointInPath.apply(this, [x, y, fillRule]);\n        }\n        else {\n            return cIsPointInPath.apply(this, args);\n        }\n    };\n    window.Path2D = Path2D;\n}\n\nfunction roundRect(x, y, width, height, radii) {\n    var _this = this;\n    if (radii === void 0) { radii = 0; }\n    if (typeof radii === \"number\") {\n        // eslint-disable-next-line no-param-reassign\n        radii = [radii];\n    }\n    // check for range error\n    if (Array.isArray(radii)) {\n        if (radii.length === 0 || radii.length > 4) {\n            throw new RangeError(\"Failed to execute 'roundRect' on '\".concat(this.constructor.name, \"': \").concat(radii.length, \" radii provided. Between one and four radii are necessary.\"));\n        }\n        radii.forEach(function (v) {\n            if (v < 0) {\n                throw new RangeError(\"Failed to execute 'roundRect' on '\".concat(_this.constructor.name, \"': Radius value \").concat(v, \" is negative.\"));\n            }\n        });\n    }\n    else {\n        return;\n    }\n    if (radii.length === 1 && radii[0] === 0) {\n        return this.rect(x, y, width, height);\n    }\n    // set the corners\n    // tl = top left radius\n    // tr = top right radius\n    // br = bottom right radius\n    // bl = bottom left radius\n    var minRadius = Math.min(width, height) / 2;\n    var tr, br, bl;\n    var tl = (tr = br = bl = Math.min(minRadius, radii[0]));\n    if (radii.length === 2) {\n        tr = bl = Math.min(minRadius, radii[1]);\n    }\n    if (radii.length === 3) {\n        tr = bl = Math.min(minRadius, radii[1]);\n        br = Math.min(minRadius, radii[2]);\n    }\n    if (radii.length === 4) {\n        tr = Math.min(minRadius, radii[1]);\n        br = Math.min(minRadius, radii[2]);\n        bl = Math.min(minRadius, radii[3]);\n    }\n    // begin with closing current path\n    // this.closePath();\n    // let's draw the rounded rectangle\n    this.moveTo(x, y + height - bl);\n    this.arcTo(x, y, x + tl, y, tl);\n    this.arcTo(x + width, y, x + width, y + tr, tr);\n    this.arcTo(x + width, y + height, x + width - br, y + height, br);\n    this.arcTo(x, y + height, x, y + height - bl, bl);\n    // and move to rects control point for further path drawing\n    this.moveTo(x, y);\n}\n/**\n * Polyfills roundRect on CanvasRenderingContext2D and Path2D\n * @param {WindowLike} window - window like object containing both CanvasRenderingContext2D and Path2D constructor\n */\nfunction polyfillRoundRect(window) {\n    if (!window || !window.CanvasRenderingContext2D)\n        return;\n    var CanvasRenderingContext2D = window.CanvasRenderingContext2D, Path2D = window.Path2D;\n    // polyfill unsupported roundRect for e.g. firefox https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/roundRect#browser_compatibility\n    if (CanvasRenderingContext2D && !CanvasRenderingContext2D.prototype.roundRect) {\n        CanvasRenderingContext2D.prototype.roundRect = roundRect;\n    }\n    if (Path2D && !Path2D.prototype.roundRect) {\n        Path2D.prototype.roundRect = roundRect;\n    }\n}\n\npolyfillPath2D(window);\npolyfillRoundRect(window);\n"],"names":["__spreadArray","to","from","pack","i","l","ar","ARG_LENGTH","SEGMENT_PATTERN","NUMBER","parseValues","args","numbers","parsePath","path","data","p","_","command","theArgs","type","theCommand","rotatePoint","point","angle","nx","ny","translatePoint","dx","dy","scalePoint","s","Path2D","_a","x","y","r","start","end","ccw","x1","y1","x2","y2","rx","ry","cp1x","cp1y","cp2x","cp2y","cpx","cpy","width","height","radii","buildPath","ctx","commands","endAngle","startAngle","largeArcFlag","sweepFlag","endPoint","midPoint","lambda","t1","t2","w","h","pathType","centerPoint","qcpx","qcpy","startPoint","currentPoint","c","polyfillPath2D","window","CanvasRenderingContext2D","cFill","cStroke","cIsPointInPath","_i","fillRule","roundRect","_this","v","minRadius","tr","br","bl","tl","polyfillRoundRect"],"mappings":"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","x_google_ignoreList":[0]}